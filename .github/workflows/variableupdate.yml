name: Run Ansible Playbook

on:
  workflow_dispatch:
    inputs: 
      Client:
        type: choice
        required: true
        default: 'ALL'
        description: Client
        options:
         - Client1
         - Client2
         - Client3
         - Client4
      Environment:
        type: choice
        required: true
        default: 'ALL'
        description: Environment
        options:
         - ALL
         - PS
         - UAT
         - SBX
      type:
        type: choice
        required: true
        description: Refresh Type
        default: All
        options:
          - Core
          - Portal
          - ALL
      Core_Source_Backup_AppDB:
        description: 'Core_Source_Backup_AppDB'
        default: '\\Server\Folder$\\Core_Source\\'
        required: false  
      Core_Source_Backup_EngDB:
        description: 'AppDB Core Source'
        required: false
      Core_Bypass_Backup:
        description: 'Core_Bypass_Backup'
        required: true
        default: 'false'
        type: 'string'
        options: 
         - 'true'
         - 'false'
      Portal_Source_Backup_AppDB:
        description: 'Portal_Source_Backup_AppDB'    
        default: '\\Servername\Foldername$\Portal_Source'
        required: false
      Portal_Source_Backup_EngDB:
        description: 'Portal_Source_Backup_EngDB' 
        default: '\\Servername\Foldername$\Portal_Source'
        required: false
      Portal_Bypass_Backup:
        description: 'Portal_Bypass_Backup'
        required: true
        default: 'false'
        type: 'string'
        options: 
         - 'true'
         - 'false'

jobs:
  Action:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout repository content
      uses: actions/checkout@v2
    - name: Setup environment
      uses: ./.github/actions/setup-env
      
    - name: Prepare Core vars file
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Core" ]]; then
          cp vars.yml Core_vars_temp_${{ github.run_id }}.yml
          if [[ -n "${{ github.event.inputs.Client }}" ]]; then
            echo "Client: '${{ github.event.inputs.Client }}'" >> Core_vars_temp_${{ github.run_id }}.yml
          fi
          if [[ -n "${{ github.event.inputs.Environment }}" ]]; then
            echo "Environment: '${{ github.event.inputs.Environment }}'" >> Core_vars_temp_${{ github.run_id }}.yml
          fi
          if [[ -n "${{ github.event.inputs.type }}" ]]; then
            echo "type: '${{ github.event.inputs.type }}'" >> Core_vars_temp_${{ github.run_id }}.yml
          fi
            if [[ "${{ github.event.inputs.Core_Source_Backup_AppDB }}" = "\\Server\Folder$\\Core_Source\\" ]]; then
              echo "Core_Source_Backup_AppDB: '\\\\backupserver01\\Refresh$\\ALD${{ github.event.inputs.Environment }}DB${{ github.event.inputs.Client }}CLU$//${{ github.event.inputs.Client }}${{ github.event.inputs.Environment }}SQLAG_${{ github.event.inputs.Client }}APP_FULL.bak'" >> Core_vars_temp_${{ github.run_id }}.yml
            fi
          if [[ -n "${{ github.event.inputs.Core_Source_Backup_EngDB }}" ]]; then
            echo "Core_Source_Backup_EngDB: '${{ github.event.inputs.Core_Source_Backup_EngDB }}'" >> Core_vars_temp_${{ github.run_id }}.yml
          fi
          if [[ -n "${{ github.event.inputs.Core_Bypass_Backup }}" ]]; then
            echo "Core_Bypass_Backup: '${{ github.event.inputs.Core_Bypass_Backup }}'" >> Core_vars_temp_${{ github.run_id }}.yml
          fi
        fi

    - name: Prepare Portal vars file
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Portal" ]]; then
          cp vars.yml Portal_vars_temp_${{ github.run_id }}.yml
          if [[ -n "${{ github.event.inputs.Client }}" ]]; then
            echo "Client: '${{ github.event.inputs.Client }}'" >> Portal_vars_temp_${{ github.run_id }}.yml
          fi
          if [[ -n "${{ github.event.inputs.Environment }}" ]]; then
            echo "Environment: '${{ github.event.inputs.Environment }}'" >> Portal_vars_temp_${{ github.run_id }}.yml
          fi
          if [[ -n "${{ github.event.inputs.type }}" ]]; then
            echo "type: '${{ github.event.inputs.type }}'" >> Portal_vars_temp_${{ github.run_id }}.yml
          fi
          if [[ -n "${{ github.event.inputs.Portal_Source_Backup_AppDB }}" ]]; then
            echo "Portal_Source_Backup_AppDB: '${{ github.event.inputs.Portal_Source_Backup_AppDB }}'" >> Portal_vars_temp_${{ github.run_id }}.yml
          fi
          if [[ -n "${{ github.event.inputs.Portal_Source_Backup_EngDB }}" ]]; then
            echo "Portal_Source_Backup_EngDB: '${{ github.event.inputs.Portal_Source_Backup_EngDB }}'" >> Portal_vars_temp_${{ github.run_id }}.yml
          fi
          if [[ -n "${{ github.event.inputs.Portal_Bypass_Backup }}" ]]; then
            echo "Portal_Bypass_Backup: '${{ github.event.inputs.Portal_Bypass_Backup }}'" >> Portal_vars_temp_${{ github.run_id }}.yml
          fi
        fi    

    - name: Print Params
      run: |
          export TYPE=${{ github.event.inputs.type }}
          python3 print_vars.py
          
    - name: Run Ansible playbook for Core
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Core" ]]; then
          ansible-playbook core.yml -e "@Core_vars_temp_${{ github.run_id }}.yml"
        fi
        

    - name: Run Ansible playbook for Portal
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Portal" ]]; then
          ansible-playbook portal.yml -e "@Portal_vars_temp_${{ github.run_id }}.yml"
        fi
