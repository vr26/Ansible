name: Run Ansible Playbook

on:
  workflow_dispatch:
    inputs: 
      Client:
        type: choice
        required: true
        default: 'ALL'
        description: Client
        options:
         - BHAR
         - BHME
         - CMIL
         - LWWA
      Environment:
        type: choice
        required: true
        default: 'ALL'
        description: Environment
        options:
         - ALL
         - PS
         - UAT
         - SBX
      type:
        type: choice
        required: true
        description: Refresh Type
        default: All
        options:
          - Core
          - Portal
          - ALL
      Core_Source_Backup_AppDB:
        description: 'Core_Source_Backup_AppDB'     
        required: false  
      Core_Source_Backup_EngDB:
        description: 'Core_Source_Backup_EngDB'     
        required: false
      Core_Bypass_Backup:
        description: 'Core_Bypass_Backup'
        required: true
        default: 'false'
        type: 'string'
        options: 
         - 'true'
         - 'false'
      Portal_Source_Backup_AppDB:
        description: 'Portal_Source_Backup_AppDB'     
        required: false
      Portal_Source_Backup_EngDB:
        description: 'Portal_Source_Backup_EngDB'     
        required: false
      Portal_Bypass_Backup:
        description: 'Portal_Bypass_Backup'
        required: true
        default: 'false'
        type: 'string'
        options: 
         - 'true'
         - 'false'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository content
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Ansible
      run: pip install ansible
      
    - name: Prepare Core vars file
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Core" ]]; then
          bash prepare_vars.sh Core ${{ github.run_id }} "${{ toJson(github.event.inputs) }}"
        fi

    - name: Prepare Portal vars file
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Portal" ]]; then
          bash prepare_vars.sh Portal ${{ github.run_id }} "${{ toJson(github.event.inputs) }}"
        fi

    - name: Print Core_vars_temp.yml
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Core" ]]; then
        python3 -c "
        import yaml

        # Load the vars_temp file
        with open('Core_vars_temp_${{ github.run_id }}.yml', 'r') as f:
            vars = yaml.safe_load(f)
        # Print the final values of the keys
        for key, value in vars.items():
            print(f'{key}: {value}')

        print('Pausing for 30 seconds. Please check the variables and cancel the workflow if needed.')
        "
        sleep 30
        fi

    - name: Run Ansible playbook for Core
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Core" ]]; then
          ansible-playbook core.yml -e "@Core_vars_temp_${{ github.run_id }}.yml"
        fi
        
    - name: Print Portal_vars_temp.yml
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Portal" ]]; then
        python3 -c "
        import yaml

        # Load the vars_temp file
        with open('Portal_vars_temp_${{ github.run_id }}.yml', 'r') as f:
            vars = yaml.safe_load(f)
        # Print the final values of the keys
        for key, value in vars.items():
            print(f'{key}: {value}')

        print('Pausing for 30 seconds. Please check the variables and cancel the workflow if needed.')
        "
        sleep 30
        fi

    - name: Run Ansible playbook for Portal
      run: |
        if [[ "${{ github.event.inputs.type }}" == "Portal" ]]; then
          ansible-playbook Portal.yml -e "@Portal_vars_temp_${{ github.run_id }}.yml"
        fi
        
